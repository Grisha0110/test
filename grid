from sklearn.model_selection import GridSearchCV
from sklearn.ensemble import RandomForestClassifier
from sklearn.datasets import load_iris

# Load a sample dataset (you can replace this with your own dataset)
iris = load_iris()
X = iris.data
y = iris.target

# Define the hyperparameter grid to search
param_grid = {
    'n_estimators': [50, 100, 200],
    'max_depth': [None, 10, 20],
    'min_samples_split': [2, 5, 10],
    'min_samples_leaf': [1, 2, 4],
    'max_features': ['auto', 'sqrt', 'log2']
}

# Create a Random Forest Classifier
rf_classifier = RandomForestClassifier(random_state=42)

# Create a GridSearchCV instance
grid_search = GridSearchCV(
    rf_classifier,
    param_grid,
    cv=5,  # Number of cross-validation folds
    scoring='accuracy',  # You can use other metrics as well
    n_jobs=-1  # Use all available CPU cores
)

# Perform the grid search
grid_search.fit(X, y)

# Print the best hyperparameters and corresponding score
print("Best Hyperparameters:", grid_search.best_params_)
print("Best Score:", grid_search.best_score_)
